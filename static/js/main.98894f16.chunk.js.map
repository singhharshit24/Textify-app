{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","msg","Navbar","mode","href","title","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","data-bs-toggle","onClick","handleBlueDark","handleGreenDark","handleNoDark","Textform","_useState","useState","_useState2","Object","slicedToArray","text","settext","mystyle","backgroundColor","colour","borderColor","style","color","heading","value","placeholder","rows","onChange","event","target","newText","toUpperCase","showAlert","dark","toLowerCase","prompt","b","replace","RegExp","document","getElementById","select","navigator","clipboard","writeText","length","trim","split","defaultProps","about","App","setMode","_useState3","_useState4","setAlert","_useState5","_useState6","setColour","message","setTimeout","Fragment","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.98894f16.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        props.alert &&  <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{props.alert.msg}</strong>\r\n            {/* <button type=\"button\" class=\"btn-close\" aria-label=\"Close\"></button> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { a } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    // const blue = \"blue\"\r\n    // const green = \"green\"\r\n    // const white = \"white\"\r\n\r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <a className=\"navbar-brand\" href=\"#\"><i><strong><h3><u>{props.title}</u></h3></strong></i></a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item active\">\r\n                            <a className=\"nav-a\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <a className=\"nav-a\" href=\"/about\">{props.about}</a>\r\n                        </li> */}\r\n                        {/* <li className=\"nav-item dropdown\">\r\n              <a className=\"nav-a dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                Dropdown\r\n              </a>\r\n              <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                <a className=\"dropdown-item\" href=\"/\">Action</a>\r\n                <a className=\"dropdown-item\" href=\"/\">Another action</a>\r\n                <div className=\"dropdown-divider\"></div>\r\n                <a className=\"dropdown-item\" href=\"/\">Something else here</a>\r\n              </div>\r\n            </li> */}\r\n                        {/* <li className=\"nav-item\">\r\n              <a className=\"nav-a disabled\" href=\"/\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n            </li> */}\r\n                    </ul>\r\n                    {/* <form className=\"form-inline my-2 my-lg-0\">\r\n                        <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n                </div>\r\n                <div className=\"dropdown mx-2\">\r\n                    <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                        Dark Mode\r\n                    </button>\r\n                    <ul className=\"dropdown-menu\">\r\n                        <li>\r\n                            <button className='btn' onClick={props.handleBlueDark}>Enable Blue Theme Dark Mode</button>\r\n                        </li>\r\n                        <li>\r\n                            <button className='btn' onClick={props.handleGreenDark}>Enable Green Theme Dark Mode</button>\r\n                        </li>\r\n                        <li>\r\n                            <button className='btn' onClick={props.handleNoDark} >Disable Dark Mode</button>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                {/* <div className=\"form-check form-switch\" >\r\n                    <input className=\"form-check-input\" onClick={props.handleDark} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                    <label className={`form-check-label text-${props.mode === \"light\" ? \"dark\" : \"light\"}`} htmlFor=\"flexSwitchCheckDefault\">Enable Blue {props.mode === \"light\" ? \"dark\" : \"light\"} Mode</label>\r\n                </div> */}\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    about: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: \"Title\",\r\n    about: \"About Us\"\r\n}","import React, { useState } from 'react'\r\n\r\nexport default function Textform(props) {\r\n    const [text, settext] = useState(\"\")\r\n\r\n    let mystyle = {\r\n        backgroundColor: props.colour === \"#234b2c\"?\"darkgreen\":\"#007bff\",\r\n        borderColor: props.colour === \"#234b2c\"?\"darkgreen\":\"#007bff\"\r\n    }\r\n\r\n    const handleUpper = () => {\r\n        // console.log(text);\r\n        let newText = text.toUpperCase();\r\n        settext(newText);\r\n        props.showAlert(\"Converted to Uppercase!\", \"success\")\r\n    }\r\n\r\n    const handleLower = () => {\r\n        // console.log(text);\r\n        let newText = text.toLowerCase();\r\n        settext(newText);\r\n        props.showAlert(\"Converted to lowercase!\", \"success\")\r\n    }\r\n\r\n    const clearText = () => {\r\n        // console.log(text);\r\n        let newText = \"\";\r\n        settext(newText);\r\n        props.showAlert(\"Text cleard!\", \"success\")\r\n    }\r\n\r\n    const replaceText = () => {\r\n        let a = prompt(\"Replace what: \")\r\n        let b = prompt(\"Replace with: \")\r\n        let newText = text.replace(new RegExp(a, \"gi\"), b)\r\n        settext(newText)\r\n        props.showAlert(\"Text replaced!\", \"success\")\r\n    }\r\n\r\n    const copyText = () => {\r\n        let a = document.getElementById(\"exampleFormControlTextarea1\")\r\n        a.select()\r\n        navigator.clipboard.writeText(a.value)\r\n        props.showAlert(\"Text is copied to clipboard!\", \"success\")\r\n    }\r\n\r\n    // const removeSpace = ()=>{\r\n    //     let a = text.trim()\r\n    //     settext(a)\r\n    // }\r\n\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"On change\");\r\n        settext(event.target.value)\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"container\" style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}>\r\n                <h1>{props.heading}</h1>\r\n                <textarea className=\"form-control\" style={{ backgroundColor: props.mode === \"dark\" ? \"gray\" : \"white\", color: props.mode === \"dark\" ? \"white\" : \"black\" }} value={text} placeholder=\"Enter text here ...\" id=\"exampleFormControlTextarea1\" rows=\"8\" onChange={handleOnChange}></textarea>\r\n                <button className='btn btn-primary my-3 mx-1' style={mystyle} onClick={handleUpper} dark>To UPPERCASE</button>\r\n                <button className='btn btn-primary my-3 mx-1' style={mystyle} onClick={handleLower}>To lowercase</button>\r\n                <button className='btn btn-primary my-3 mx-1' style={mystyle} onClick={replaceText}>Replace Text</button>\r\n                {/* <button className='btn btn-primary my-3 mx-1' onClick={removeSpace}>Remove Extra Spaces</button> */}\r\n                <button className='btn btn-success my-3 mx-1' onClick={copyText}>Copy to Clipboard</button>\r\n                <button className='btn btn-danger my-3 mx-1' onClick={clearText}>Clear Text</button>\r\n            </div>\r\n            <div className='container' style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}>\r\n                <h2>Text Summary</h2>\r\n                <p>\r\n                    No. of Words: {text.length === 0 ? 0 : text.trim().split(\" \").length} <br />\r\n                    No. of Charecters: {text.length} <br />\r\n                    Reading Time: {0.008 * text.trim().split(\" \").length} mins.\r\n                </p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length === 0 ? \"Write the text in the textbox above to see the preview ...\" : text}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\nimport './App.css';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform'\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\")\n  const [alert, setAlert] = useState(null)\n  const [colour, setColour] = useState(\"white\")\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n  const handleBlueDark = () => {\n    setColour(\"#151f59\")\n    setMode(\"dark\")\n    document.body.style.backgroundColor = \"#151f59\"\n    showAlert(\"Dark mode is enabled!\", \"success\")\n    // document.title = \"hello\"\n    // setInterval(() => {\n    //   document.title = \"hi\"\n    // }, 2000);\n    // setInterval(() => {\n    //   document.title = \"hoooo\"\n    // }, 1500);\n  }\n  // setMode(\"light\")\n  // document.body.style.backgroundColor = \"white\"\n  // showAlert(\"Light mode is enabled!\", \"success\")\n  const handleGreenDark = () => {\n    setColour(\"#234b2c\")\n    setMode(\"dark\")\n    document.body.style.backgroundColor = \"#234b2c\"\n    showAlert(\"Dark mode is enabled!\", \"success\")\n  }\n\n  const handleNoDark = () => {\n    setMode(\"light\")\n    setColour(\"white\")\n    document.body.style.backgroundColor = \"white\"\n    showAlert(\"Light mode is enabled!\", \"success\")\n  }\n\n  return (\n    // <Router>\n    <>\n      <Navbar title=\"TextUtils\" mode={mode} handleBlueDark={handleBlueDark} handleGreenDark={handleGreenDark} handleNoDark={handleNoDark} />\n      <Alert alert={alert} />\n      <div className='container my-3'>\n        <Textform heading=\"Enter the text to analyse: \" mode={mode} colour={colour} showAlert={showAlert} />\n        {/* <Routes> */}\n        {/* <Route exact path=\"/about\" element={<About mode={mode} colour={colour} />} /> */}\n        {/* <Route exact path=\"/\" element={<Textform heading=\"Enter the text to analyse: \" mode={mode} colour={colour} showAlert={showAlert} />} /> */}\n        {/* </Routes> */}\n\n      </div>\n    </>\n\n\n    // </Router>\n\n  );\n}\n\nexport default App;\n// const handleGreenDark = () => {\n//   setColour(\"#234b2c\")\n//   if (mode === \"light\") {\n//     setMode(\"dark\")\n//     document.body.style.backgroundColor = \"#234b2c\"\n//     showAlert(\"Dark mode is enabled!\", \"success\")\n//   }\n//   else {\n//     setMode(\"light\")\n//     document.body.style.backgroundColor = \"white\"\n//     showAlert(\"Light mode is enabled!\", \"success\")\n//   }\n// }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}